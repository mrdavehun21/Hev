<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
    <style>
        #map {
            height: 90vh;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="map"></div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
    
    <script>
        var map = L.map('map').setView([47.4979, 19.0402], 12);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        var customIcon = L.icon({
            iconUrl: '../icons/picike 1.png',
            iconSize: [41, 41], // size of the icon
            iconAnchor: [21, 21], // point of the icon which will correspond to marker's location
            popupAnchor: [1, -34] // point from which the popup should open relative to the iconAnchor
        });

        var markers = L.markerClusterGroup();
        map.addLayer(markers);

        function fetchData() {
        fetch('/home/map', { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
            .then(response => response.json())
            .then(data => {
                markers.clearLayers();

                // Add markers for vehicles
                data.H5.forEach(vehicle => {
                    const [part1, part2] = vehicle.licensePlate.split("-");
                    const items = data.licensePlates.filter(item => item.palyaszam.includes(part1) || item.palyaszam.includes(part2));

                    if (items.length > 0) {
                        const palyaszamFormatted = items.map(item => `${item.palyaszam[0]}-${item.palyaszam[1]}`).join(' ');
                        const popupContent = `<div>
                                                <strong>${palyaszamFormatted}</strong><br>
                                                <span>${vehicle.tripHeadsign}</span>
                                            </div>`;

                        var marker = L.marker([vehicle.location.lat, vehicle.location.lon], { icon: customIcon })
                            .bindPopup(popupContent);
                        markers.addLayer(marker);
                    }
                });

                // Add markers for vehicles
                data.tram.forEach(vehicle => {

                    const popupContentVill = `<div>
                                                <strong>${vehicle.licensePlate}</strong><br>
                                                <span>${vehicle.tripHeadsign}</span>
                                            </div>`;

                    var marker = L.marker([vehicle.location.lat, vehicle.location.lon])
                        .bindPopup(popupContentVill);
                    markers.addLayer(marker);
                });

                // Add polyline H5
                if (data.latlngs.length > 0) {
                    var latlngs = data.latlngs.map(coord => L.latLng(coord[0], coord[1]));
                    var polyline = L.polyline(latlngs, { color: '#8A236C' }).addTo(map);
                    markers.addLayer(polyline);
                }

                // Add polyline 41
                if (data.latlngs2.length > 0) {
                    var latlngs2 = data.latlngs2.map(coord => L.latLng(coord[0], coord[1]));
                    var polyline2 = L.polyline(latlngs2, { color: 'orange' }).addTo(map);
                    markers.addLayer(polyline2);
                }
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
    }

    window.onload = function () {
        fetchData();
        setInterval(fetchData, 30000);
    };

    </script>
</body>
</html>
